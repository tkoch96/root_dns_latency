Review #36C
===========================================================================

Overall merit
-------------
1. Reject

Reviewer confidence
-------------------
2. Medium

Paper summary
-------------
This paper studies the delay introduced by root DNS lookups as well as the path inflation for anycast RootDNS services and anycast CDNs.

Technical correctness
---------------------
2. Poor

Strengths
---------
Detailed analysis of popular anycast services.

Things to improve
-----------------
This is basically two papers in one: an analysis of the root DNS overhead and an analysis of anycast CDNS as highlighted by the 7-page detailed appendix.
You are using a lot of assumptions that are unclear to this reviewer.
A more detailed discussion on how your anycast DNS results differ from previous work is needed.

Comments for author
-------------------
Overall, you are looking at a nice and timely topic: The performance of anycast. The idea of using a comparison of two different services that are built on top of anycast is also, in principle, cool.
However, as the paper stands it does not deliver as the goals of the services are different and, thus, the design differs. This makes it difficult to do a comparative evaluation as the paper structure in the end shows.

So the conclusion for root DNS is: "increasing deployment size can lead to more users experiencing path inflation; however, the amount of inflation is tiny". (But, what about the fraction of users that benefit???)
The conclusion for anycast CDN is strange: "the latency per page load can decrease by hundreds of milliseconds ... results in more path inflation." What does "more" mean? For what fraction does it decrease?
"The path inflation per RTT for the anycast CDN is about half that of the root deployments. Hence, even with greater path inflation... help CDNs..:" so this is strange... where is the path inflation larger CDN or DNS?

Why are you using data from 2018 and not 2019?
Why are you excluding I but not B even though they are partially or fully anonymized?
It seems that you are excluding a huge number of queries... Why are they of no use to you?
Why is it OK to use data from 2019 to augment data from 2018? Why are the CDN based page lookups representative of DNS requests to non CDN hosted sites? IPs change over time even beyond /24s...
The English is broken here "We then join the DITL captures and CDN user counts by the recursive resolver /24, " This is highly questionable as sites using DHCP etc are unlikely to always hand out IPs from the same /24... Why do you need this scaling? By how much do you scale the data in this way? Just moving such a discussion to an appendix is not the way to go. Indeed, none of the arguments in A.2 accounts for merging data from 2018 with data from 2019!

The bounds that you are computing are based on strange assumptions. For example, why the heck are you sing W=3s and l_r = 0.5s to compute your exaggerated upper bound which you are then using, later on, to argue that root DNS lookup still accumulates some time....
Indeed, given the effectiveness of DNS root caching it is strange why you can claim that "We find that users likely spend less than 10ms waiting for root DNS resolution during a page load." how many page loads even involve a root DNS resolution. Yes, you, later on, show that there are superfluous DNS root lookup but not one for every single web page....

This reviewer also finds it strange that you claim "Figure 2 provides a truly global view of how users incur latency due to the root DNS." After all, you did not include queries from multiple root DNS servers.

Moving over to CDN latency this reviewer is confused that you even need to state the following: "we conclude that anycast latency results in orders of magnitude more visible delay to users for page loads ... see due to the root DNS."

For all your CDN latencies this reviewer is confused about the data ... To which extend do you only include requests that can be handled by the frontends without any need for any communication with the backends... The latter can really skew your results and increase latencies substantially. Since there is no discussion of this in the paper this reviewer is highly confused.

It is also not clear why you can use the RIPE data to calculate latencies per page loads from # of RTTs... What kind of assumptions do you use in this in terms of window sizes, congestion, etc..
Just using 10 RTTs to load a Web page is strange... Especially, as not all Web content of a page may come from the CDN and it may require multiple requests for multiple objects... This is a very very strange estimate even if you use it as lower bound as ***only*** mentioned in the appendix itself.

Given that you use 10 RTTs as estimations for the CDN latencies one should expect there to be at least an order of magnitude difference is the delays when compared to RootDNS which needs 1 RTT. Why do you need 3 pages of analysis for this?

Regarding your path inflation data this reviewer is confused.
Given that you can only geolocate 0.4% of the DITL query volume how representative is this data? How come that you can do any claims here?

For the CDN you are making confusing statements as well:
"they may occasionally be routed to different sites due to load balancing" How is this possible? One of the major drawback of anycast CDNs is the inability to do load balancing for /24s....
However, not all IPs from a /24 are necessarily in the same geographic region... For example, full mobile operators may be hiding behind a NAT that is using a few /24s....

What is confusing in your comparison is that you are not doing a routing comparison of the CDN anycast sites vs. the root DNS anycast sites... Why not?