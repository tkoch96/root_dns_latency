---
title: If a Path is Inflated, and Noone Uses It, Is It Inefficient[a]?
author:
- name: Thomas Koch
  affiliation: Columbia University
- name: Matt Calder
  affiliation: Microsoft Research
- name: Ethan Katz-Bassett
  affiliation: Columbia University
- name: John Heidemann
  affiliation: ISI
- name: Arpit Gupta
  affiliation: UCSB




colorlinks: true
indent: true
documentclass: acmart
biblio-style: ACM-Reference-Format.bst
classoption:
- sigconf
- nonacm
- 10pt
header-includes:
- \pagestyle{plain}
---


\iffalse
subtitle: Paper \#4, \pageref{endofconclusionlabel} pages (\ref{TotPages} with citations)


classoption:
- natbib=true
- table
header-includes:
- \renewcommand{\shortauthors}{Anonymized}
- \renewcommand{\shorttitle}{User-Perceived Root DNS Latency}
- \setcopyright{none}
- \settopmatter{printacmref=false, printccs=false, printfolios=true}
- \acmDOI{}
- \acmISBN{}
---


\fi


\iffalse
Github: https://github.com/tkoch96/root_dns_latency
Table of contents


# Abstract {-}
# Introduction
# DNS --  A Practical Viewpoint
## Great Latency Savings Potential
## Practical DNS Pitfalls
# A Close Look at a Recursive Resolver
# A Global Look at Users of a Large CDN
## Data Sources and Processing
## Root Latency Experienced by Users
# Related Work
# Conclusion




\fi


\iffalse




Anycast is a means of distributing content that has been praised for its simplicity and performance, yet criticized for inflating user latencies in some cases. The r[b]oot DNS servers are frequent sources of information for studies analyzing anycast, since the information is relatively easy to obtain. We argue that the root DNS servers are not ideal test subjects for studies either offering criticism of or suggesting improvements for anycast, since users rarely interact with the root DNS infrastructure. That is, we question whether anycast’s inefficiencies are truly inefficiencies if they have no real, measurable effect.\break
We demonstrate that simple caching policies of recursive resolvers limit a users’ exposure to the root DNS infrastructure, and quantify globally how much latency users experience each day due to root DNS resolution. Our results indicate most users spend no more than 15 ms each day waiting for root DNS query resolution, and that path inflation caused by anycast results in an additional 2 ms for most users -- latencies that are hardly distinguishable from noise. These findings therefore indicate that future studies should be more careful when drawing from root DNS server data to support arguments regarding anycast latency inflation. 


\fi


\iffalse


Link to outline
\fi




# Abstract {-}

Anycast is a means of distributing content that has been praised for its simplicity and performance, yet criticized for inflating user latencies in some cases. However, anycast CDNs and anycasted DNS resolvers serve latency-sensitive content to millions presenting an apparent contradiction. To resolve this discrepancy in understanding, we analyze anycast in two important settings: the root DNS and a large anycast CDN, placing an emphasis on how anycast’s performance translates to end user latency. \break
First, we question whether latency matters at all, and find that while it does in the CDN setting, it makes little difference in the root DNS due to heavy caching near end users -- accounting for about 2 ms per day for users. We then examine how anycast specifically impacts performance to end users, and again demonstrate users see negligible effects from anycast path inflation. Users of the anycast CDN, conversely, can experience a few ms per page load of anycast path inflation, with the effect becoming more prevalent in larger anycast deployments. The effects of the inflation, however, are dwarfed by the performance benefits users see by, on average, visiting closer anycast sites. Hence we demonstrate that although anycast can inflate latencies, the degree to which this affects users largely depends on the setting, and the prevalence of this inflation does not tell the whole story --  anycast still does a good job routing users to sites.




# Introduction


\label{sec:introduction}
IP anycast, a system in which geographically diverse servers known as anycast replicas all use the same IP address, is an important part of a number of operational DNS \cite{root_servers, cloudflare_anycast, akamai_anycast, route53_anycast, google_public_dns} and CDN \cite{calder2015analyzing,edgecast_anycast,amazon_cloudfront} systems today, in part because of its support to improve latency to clients and decrease load on each anycast server \cite{katabi2000framework,metz2002ip,rfc_1546}. However, numerous studies have argued that anycast provides sub-optimal performance for some users, compared to the lowest latency anycast could offer in theory. Despite these implications, how these inefficiencies impact user experience is not well understood. Anycast, therefore, presents a paradox providing benefits of increased capacity and decreased latency while also purportedly hurting performance. To resolve this, we take a step back and ask pointed questions -- why do distributed systems such as CDNs and operational DNS use anycast, how does anycast affect their performance, and how does this performance ultimately translate to end user experience? \break \break


Towards answering these questions we analyze anycast from two different angles: the root DNS and a large anycast CDN, chosen for their overlapping, yet distinctive, goals. The root DNS servers feature in studies involving anycast because it is relatively easy to gain access to root DNS data, because it is straightforward to gain access to information about their deployments, and because they are run by several organizations \cite{root_servers}. This last fact manifests itself in a diverse set of deployment strategies, for essentially the same service. Their use here thus provides us with, in addition to the above mentioned benefits, comparisons to prior work. Examining the root DNS and anycast CDNs is interesting because this analysis illustrates how the setting in which we study anycast heavily influences the conclusions we can draw -- while we find that mitigating anycast path inflation is quite important for anycast CDNs, the impact of latency \textit{at all} in the root DNS setting is negligible. \break \break
Although we do wish to examine how anycast affects performance both at the roots and in anycast CDNs, we first take a step back and examine whether performance (that is, latency) matters \textit{at all} (\autoref{sec:root_dns_latency}). We show that, from a variety of perspectives, the effect of root DNS latency on user-perceived latency is negligible, accounting for perhaps a few milliseconds of wait time per day or fractions of a percent per page load. This is due mostly to heavy caching of root DNS records. Conversely, we show that latency matters considerably for anycast CDNs, comprising tens of percents of page load time (\autoref{sec:does_anycast_matter_cdn}). \break
With these basic results about latency, we revisit frequently posed questions about how anycast specifically impacts these services. We find that, even though round-trip times differ significantly by root DNS anycast deployment size, these differences are negligible when looked at from a per-page load perspective, making at most an INSERT_NUMBER millisecond difference. Similarly, even though we find that increasing deployment size can lead to more inflation in the roots, this inflation negligibly factors into page load times (\autoref{sec:root_dns_anycast}). Conversely, we find that for an anycast CDN, although increasing deployment sizes does make anycast path inflation more prevalent, the latency per page load decreases by tens of milliseconds (\autoref{sec:cdn_anycast}) with additional sites. Moreover, regardless of deployment size, the path inflation for the anycast CDN is less than half that of the roots. Hence larger deployment sizes can provide tangible latency benefits to anycast CDNs, but probably provide little benefit in the root DNS setting, and the magnitude of these benefits are largely dependent on deployment details.


# Anycast in Distributed Systems
\label{sec:anycast_distributed_systems}


## Potential Benefits of Anycast 
[ why distributed systems might use anycast, different performance benefits they might shoot for]



## Root DNS anycast
[ brief description of dns resolution process, caching potential ]


## CDN Anycast
[ description of microsoft’s CDN, with a focus on intricacies of rings, and how we use them to simulate deployments]
# Does Root Latency Matter?
\label{sec:root_dns_latency}


[ISI results -- root dns latency cdf and PLT implications
Main idea is cache hit rate is high, and root requests are rarely generated. ]


[DITL -- root DNS per day latency; Main idea is that amortizing requests seen to the roots over large user populations makes latency implications small]


[Embedded in the above is a comparison between high latency and low latency roots with implications to user latency, so No, latency doesn’t matter]
# Anycast in the Root DNS
\label{sec:root_dns_anycast}
[anycast path inflation per RTT & per page load;
Main idea is path inflation does become more prevalent with increasing deployment, but makes no difference to users]
[bar graph showing which sites are hit, corroborates the idea that inefficiency grows with deployment size, usually]


[use these results to suggest sites are added to root deployments for resilience, since there is no difference from a PPL perspective]
# Does Anycast Performance Matter for CDNs?
\label{sec:does_anycast_matter_cdn}
[latency per RTT and per page load at various ring sizes;
Main idea is RTT latency (and perceived latency) decreases when you add more anycast sites]
[compared to root DNS per page load; idea is CDN latency is orders of magnitude more significant PPL]
# Anycast Performance in CDNs
\label{sec:cdn_anycast}
[path inflation per RTT/page load, by ring;
Main idea is that inflation becomes more prevalent, but latency PPL still goes down]
[inefficiency by ring; shows fewer users go to the closest site, but still latency PPL goes down]
[geographic path inflation per RTT/page load, compared to the roots; 
CDN inflation < root inflation,[c] argue that CDN works to control it via peering]
[case studies of intermetro variability, or unexpectedly poor performance, highlighting the intricacies (time permitting)]
# Related Work
\label{sec:related}
IP anycast performance is usually studied in the context of two applications: the root DNS servers, and CDNs. In addition to these topics, we discuss studies of popular recursive resolvers, and user-centric measurements of web performance.


## Root DNS Anycast Performance
The performance of anycast in the context of root DNS is generally gauged by anycast’s ability to balance load among server replicas or provide low latency to users. Generally, all studies conclude that anycast successfully balances load, while latency performance depends on the specific deployment configuration. \cite{moura2016anycast} looks at a DDoS attack on the root name server infrastructure, and generally shows that anycast is a good defense mechanism against such attacks. An earlier study, \cite{sarat2006use} confirms that anycast protects the root DNS infrastructure against such attacks and, furthermore, that anycast routes users to an optimal location in most cases. \cite{de2017anycast} looks at user latency to C, F, K, and L-root and attributes better performance to good geographic location and peering strategies. These findings coincide with an earlier study, \cite{ballani2006measurement}, who conclude the performance of anycast is intrinsically linked to deployment strategy. Additionally \cite{de2017anycast} finds that as few as 12 sites can provide “good” latency to users. \cite{li_levin_spring_bhattacharjee_2018}, \cite{colitti2006evaluating}, \cite{de2017anycast}, and \cite{liang2013measuring} are all examples of studies who quantify latencies to various root servers, and note how these compare to the (optimal) latency of the closest unicast alternative for the user who issued the query.


## CDN Anycast Performance
Some CDNs (e.g. Cloudflare, Edgecast, Fastly) use IP anycast to augment their serving infrastructure. When deploying an Anycast CDN (ACDN), delivering content to users with low latency becomes a high priority, as there is a large financial incentive to do so. The simplicity of IP anycast comes at the cost of having coarse grained control over where user queries land. Shifting user load between nodes during peak hours, for example, is a challenging problem. As a potential solution, \cite{alzoubi2011practical} and \cite{flavel2015fastroute} use DNS redirects at ADNS servers to shift load among anycast nodes, albeit in slightly different ways. \cite{calder2015analyzing} analyzes what latency users are achieving, compared to optimal, when being routed to anycast nodes and finds that 10% of users experience a latency inflation of at least 100 ms. 


## Recursive Resolvers and the Benefits of Caching
Similar to the RR analysis conducted here, \cite{jung2002dns} looks at DNS traffic on a small network and notably finds that 16% of queries resulted in queries to the root, most of which were for invalid domains. As this study is quite old, it is no surprise that this rate has decreased (recall we observed .5% of queries resulted in queries to the root) since browser designers and network engineers understand the importance of caching. \cite{callahan2013modern} also looks at a RR and analyzes statistics of DNS exchanges occurring over it including DNS transaction latencies. Both \cite{yu2012authority} and \cite{lentz2013d} look at certain pathological behaviors of popular recursive resolvers, and the implications these behaviors have on root DNS load.


## Web Performance
Although we were unable to find any specific study that looked at how web performance and root DNS latency were related, there are certainly studies characterizing web performance. \cite{sundaresan2013web} characterizes web performance bottlenecks in (at the time) new broadband networks, and finds that latency is the main bottleneck for PLT when the user’s bandwidth exceeds 16 Mbps. However, the study does not realistically emulate a page load and, in particular, can not analyze the effect of having multiple DNS resolutions per page. Similarly, \cite{asrese2016wepr} analyzes how each step of a page load contributes to the aggregate PLT using a tool designed in-house. However, unlike \cite{sundaresan2013web}, they did not conduct a large measurement campaign and do not include information about multiple DNS lookups per page. A more recent study, \cite{enghardt2019web} provides a brief survey of web performance measurement studies and explains why it is difficult (with current practices) to compare two different studies in web performance.


\iffalse
(studies looking at anycast in context of root DNS servers)
Anycast Performance, Problems and Potential
how many sites are enough? 
A measurement based deployment proposal for IP Anycast
Evaluating the Effects of Anycast on DNS Root Nameservers
Measuring Query Latency of Top Level DNS Servers
Anycast vs. DDoS: Evaluating the November 2015 Root DNS Event
On the Use of Anycast in DNS
(studies looking at anycast in context of CDNs)
fastroute
A Practical Architecture for an Anycast CDN
Edgecast paper that hasn’t been released yet
Analyzing the Performance of an Anycast CDN 
(studies looking at recursive resolvers/caching)
(maybe) John’s TR of how different resolvers query at different times
On Modern DNS Behavior and Properties 
DNS Performance and the Effectiveness of Caching
D-mystifying the D-root Address Change
Authority Server Selection of DNS Caching Resolvers[d]
Recursives in the Wild: Engineering Authoritative DNS Servers
(studies looking at web performance/how user caching effects it)
Measuring and mitigating web performance bottlenecks in broadband access networks
WePR: A tool for Automated Web Performance Measurement
Demystifying Page Load Performance with WProf[e]
Practical Challenge Response for DNS
DNS Resolvers Considered Harmful[f]
Studies looking at root servers and queries that land at them
On eliminating root nameservers from the DNS
DNS Measurements at a Root Server
A Day at the Root of the Internet


\fi


# Conclusion 
IP anycast has come under attack, with studies showing, for example, how BGP can naturally route users to suboptimal anycast instances and inflate user latencies. Due to the relative availability of root DNS data and diverse deployment strategies of the root DNS servers, they are common targets for delineating inefficiencies and suggesting improvements to IP anycast. We argue not only that the root DNS servers have different design goals (i.e. resiliency against attacks) than that of other anycast services, but also that users rarely interact with the root DNS infrastructure -- rendering perceived inefficiencies and proposed improvements to be ill-founded when only tested on the root DNS. Perhaps simple yet effective ideas such as browser link prefetching or DNS request parallelization should be expanded and their adoption by users encouraged, rather than proposed improvements to IP anycast.
[a]ideally we would control the linebreak in the latex so it occurs after "it,"
[b]this argument about prior studies needs to be more careful, I think.  I propose an alternate abstract below
[c]might be an unfair comparison since the root DNS has many more nodes than Microsoft
[d]interesting that in 10 minutes they observe so many queries for COM TLD yet don't see any issue with that
[e]Might be an interesting tool to use
[f]Mark shared in an email -- shows time between DNS queries & TCP connection starts can be big, which suggests DNS is not blocking